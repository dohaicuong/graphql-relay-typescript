on:
  push:
    branches:
      # - master
      - ci

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-verions: '12.16.x'
    - name: Setup git config
      run: |
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
    - name: Check if version has been updated
      id: check
      uses: EndBug/version-check@v1
    - name: If version unchanged, treat as patch
      if: steps.check.outputs.changed != 'true'
      run: |
        echo "No version change :/"
        echo "Default pump version as patch"
        npm version patch -m "Upgrade to %s"
        git push && git push --tags
    - name: Continue on version changed
      if: steps.check.outputs.changed == 'true'
      run: 'echo "Version change found in commit ${{ steps.check.outputs.commit }}! New version: ${{ steps.check.outputs.version }} (${{ steps.check.outputs.type }})"'
    - name: Install dependencies
      run: |
        yarn
        yarn gen
    - name: Test
      run: |
        yarn test
        git add .
        git commit -m "update test coverage"
        git push

  build_and_publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Grab version from package.json
        id: check
        uses: EndBug/version-check@v1
      - uses: mr-smithers-excellent/docker-build-push@v3
        name: Build & push Docker image
        with:
          image: dohaicuong/graphql-relay-ts
          tag: ${{ steps.check.outputs.version }}
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

